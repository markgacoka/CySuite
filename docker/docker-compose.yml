version: '3.9'
services:
  django:
    restart: always
    networks:
      - cysuite_default
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: django
    ports:
      - '8000:8000'
    command: |
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py wait_for_db &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - '.:/usr/src/app'
      - 'static_volume:/static'
      - 'media_volume:/media'
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
  db:
    image: 'postgres:10-alpine'
    container_name: db
    restart: always
    networks:
      - cysuite_default
    env_file:
      - ./.env
    volumes:
      - 'db_data:/var/lib/postgresql/data'
    ports:
      - '5432:5432'
  redis:
    restart: always
    image: 'redis:alpine'
    container_name: redis
    networks:
      - cysuite_default
    volumes:
      - 'redisdata:/data'
  celery:
    restart: always
    networks:
      - cysuite_default
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: celery
    command: celery -A cysuite worker -P threads -l INFO --concurrency=8
    volumes:
      - '.:/usr/src/app'
      - 'static_volume:/static'
      - 'media_volume:/media'
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - django
volumes:
  db_data: null
  redisdata: null
  static_volume: null
  media_volume: null
networks:
  cysuite_default:
    driver: bridge